--- 
layout: post
title: "Open Data: Reverse Engineering and Maintenance - the ERDF hunt begins."
published: false
meta: 
  _edit_last: "239"
tags: []

type: post
status: draft
---
**This post is by Dr. Holger M. Kienle of MÃ¤lardalen University, Sweden

I am not sure about the exact original of my growing interest into open data, but after visiting a couple of events that did address this topic, I got inspired to write a research(y) paper on "Open Data: Reverse Engineering and Maintenance Perspective". It's available at [arXiv](http://arxiv.org/abs/1202.1656) under a [CC-BY license](http://creativecommons.org/licenses/by/3.0/).

Now, even though I did mention the R(esearch)-word, don't get scared right away. Even though the paper is aimed at people with a background in software engineering, it doesn't go into great technical depths, but rather wants to entice computer scientists to get their hands dirty with a bunch of open data challenges.

To illustrate the challenges that open data is facing, I pick the data collection for the European Regional Development Fund (ERDF) as an example. This data is dispersed over many web sites that use different
formats and query interfaces. PDF is heavily used, but also basic HTML
and fancy Web apps. The ERDF example is an interesting read in itself.

To extract and transform data that is contained -- or often rather
"trapped" -- in a document, a bunch of techniques can be used:
scraping, image processing, and schema recognition. Challenges here
are to come up with clever ways to automate as much of the tedious
work as possible. (Nobody is particularly keen on re-typing data
trapped in a PDF.) To give one example, when text from a table in a
PDF is extracted, the order of the text is often messed up. Techniques
from document image analysis could be adapted to identify the layout
of a table by recognizing the lines and their positionings that make
up the table's structure. Based on the recognized table structure,
textual exporters could be told to only process certain columns in the
table and to delimit each cell with a distinct marker for easier
post-processing.

It would be nice if researchers would burn some of their brain cycles
on open data challenges and come up with (prototype) tools that help
the "scrapers" people working in the open data trenches. Luckily,
software engineering is (also) an applied discipline with researchers
that develop prototype tools as part of their research work. Let's
hope that some of them will decide to work on open data challenges.


Many thanks to Friedrich Lindenberg (http://okfn.org/members/pudo) for
providing me with details about the ERDF open data work and for
suggesting this blog post.
